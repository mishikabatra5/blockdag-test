name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for OIDC authentication
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::211125780543:role/stage-oidc-blockdag
          aws-region: eu-central-1

      - name: Verify AWS Identity
        run: aws sts get-caller-identity

      # âœ… Generate Timestamp Once and Save
      - name: Generate Timestamp
        run: |
          TIMESTAMP=$(date +"%Y-%m-%d %H-%M-%S")
          YEAR=$(date +"%Y")
          MONTH=$(date +"%m")
          DAY=$(date +"%d")
          TIME_FORMAT_FOLDER=$(date +"%H-%M-%S")
          
          S3_PATH="stage/${YEAR}/${MONTH}/${DAY}/${TIME_FORMAT_FOLDER}"
          
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV
          echo "S3_PATH=$S3_PATH" >> $GITHUB_ENV

      - name: Run Tests
        id: run_tests
        run: mvn test -DsuiteXmlFile=src/test/resources/testng.xml
        working-directory: BlockDAG-Automation

      - name: Upload Surefire Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: BlockDAG-Automation/target/surefire-reports

      - name: Upload Emailable Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: emailable-report
          path: BlockDAG-Automation/test-output/ExtentReport.html

      # âœ… Upload Reports to S3 with Correct Path
      - name: Upload Test Reports to S3
        if: always()
        run: |
          aws s3 cp BlockDAG-Automation/target/surefire-reports s3://stage-test-report-blockag/$S3_PATH/surefire-reports/ --recursive
          aws s3 cp BlockDAG-Automation/test-output/ExtentReport.html s3://stage-test-report-blockag/$S3_PATH/ExtentReport.html

      # âœ… Send Google Chat Notification
      - name: Send Google Chat Notification
        if: always()
        run: |
          REPORT_LINK="${{ secrets.REPORT_LINK_EMAILABLE }}/$S3_PATH/ExtentReport.html"
          
          # Fix double slashes in URL
          REPORT_LINK=$(echo "$REPORT_LINK" | sed 's:/\+:/:g')

          MESSAGE="ðŸš€ Test case run for stage environment on **$TIMESTAMP**. \n\nðŸ”— Report: $REPORT_LINK"
          
          curl -X POST -H 'Content-Type: application/json' \
            -d "{\"text\": \"$MESSAGE\"}" \
            "${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}"
